To get an idea and learn minimax and alpha beta algorithm YouTube introduction: 
https://www.youtube.com/watch?v=STjW3eH0Cik&t=32s

For the GUI referred to: https://en.lichess.org/

Two Board player game: Chess

First need to install the python libraries Pygame. python-chess

The images for the chess coins taken from google. 

This program is a chess game. The user can play against a computer.

The game state is like a 2D list of strings, and most of the
processing is done on a list of strings.

The GUI displays the current state on the screen and allows the user to drag and drop for the movement of coins/pieces.

The machine plays with the human and evaluates all the possible moves which are made by the player to a given level of depth. The higher value of the search tree is assigned to white and the 
lower value is assigned to black. Knowing this technique AI plays its best play from either of the search tree and chooses its best. While assigning the depth in code problem 
mighty arise as the number of postions that need to be evaulated increases as even at 3 level of depth, thousands of positions need to be evaluated.

The algorithms used in the code:

1. Alpha-beta pruning: While evaluating a position it is found that a portion of the search tree can be eliminated as no further evaluations can
guarantee better results. The reason is White plays what suits for it and black plays what suits for it.

2. Movement table: The program stores a table of values in a dictionary form where the keys are
the positions. By this way, the evaluations can be fair, quick.

3. Guide Book - The guide book is again a dictionary that stores board
positions. Appropraite moves that can be played at such positions are stored in the dictionary. 

4. Debug book: This stores the data that is generated by errors, which helps the programmer to
refer and correct the code.

5. Coins: This stores all the images of the chess coins and chess title logo.

In this folder user need to run the main.py file.